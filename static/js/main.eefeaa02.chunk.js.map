{"version":3,"sources":["Chapter.js","Book.js","Selector.js","ChapterSelector.js","App.js","serviceWorker.js","index.js"],"names":["Chapter","chapter","Verse","index","verse","data-index","key","Verses","map","el","i","Book","chapters","useState","setVerses","ChapterRows","id","useEffect","BookSelector","book","setBook","selectable","useRef","bookName","setBookName","books","setBooks","show","setShow","name","classes","push","className","join","onClick","selectBook","ChapterLink","href","event","document","querySelectorAll","forEach","classList","remove","target","add","toggleSelector","current","style","display","console","log","bookData","ref","I","ChapterSelector","App","bible","setBible","setChapters","fetch","then","res","json","data","catch","error","Selector","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eefeaa02.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Chapter({chapter}) {\r\n\tfunction Verse({index,verse}) {\r\n\t\treturn <span\r\n\t\t\tdata-index={index}\r\n\t\t\tkey={index}\r\n\t\t>\r\n\t\t\t{verse}&nbsp;&nbsp;\r\n\t\t</span>\r\n\t}\r\n\r\n\tfunction Verses() {\r\n\t\tif (chapter) {\r\n\t\t\treturn chapter.map((el,i)=>{\r\n\t\t\t\tif (i) return <Verse index={i} key={i} verse={el} />\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\treturn <></>\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Verses />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chapter","import React,{useEffect,useState} from 'react'\r\nimport Chapter from \"./Chapter\";\r\n\r\nfunction Book({chapters}) {\r\n\tconst [chapter, ] = useState(1)\r\n\tconst [, setVerses] = useState([])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (chapters) setVerses(chapters[chapter])\r\n\t}, [chapters,chapter])\r\n\r\n\tfunction ChapterRows() {\r\n\t\tif (chapters) {\r\n\t\t\treturn chapters.map((el,i)=>{\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\treturn <tr key={i} id={`chapter_${i}`}>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{i}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<Chapter chapter={chapters[i]} key={i} />\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else{\r\n\t\t\treturn <></>\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<table><tbody>\r\n\t\t\t\t<ChapterRows />\r\n\t\t\t</tbody></table>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Book","import React,{useEffect,useRef,useState} from 'react'\r\nimport bookData from './books.json'\r\n\r\nfunction BookSelector({book, chapters=[], setBook}) {\r\n\tconst selectable = useRef(null)\r\n\r\n\tconst [bookName, setBookName] = useState('Select a Book')\r\n\tconst [books, setBooks] = useState([])\r\n\tconst [show, setShow] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBooks(bookData)\r\n\t}, [setBooks])\r\n\r\n\tfunction BookSelector({index,name}) {\r\n\t\tif (index) {\r\n\t\t\tconst classes = ['book','selection']\r\n\t\t\t\r\n\t\t\tif (index === book) classes.push('highlight')\r\n\r\n\t\t\treturn <span\r\n\t\t\t\tclassName={classes.join(' ')}\r\n\t\t\t\tkey={index}\r\n\t\t\t\tonClick={selectBook(index)}\r\n\t\t\t>{name}</span>\r\n\t\t} else {\r\n\t\t\treturn <></>\r\n\t\t}\r\n\t}\r\n\r\n\tfunction ChapterLink({index}) {\r\n\t\tfunction clickHandler(event) {\r\n\t\t\tconst links = document.querySelectorAll('.chapter.link')\r\n\t\t\t\r\n\t\t\tlinks.forEach(el => el.classList.remove('highlight'))\r\n\t\t\tevent.target.classList.add('highlight')\r\n\t\t\ttoggleSelector()\r\n\t\t}\r\n\r\n\t\tif (index) return <a \r\n\t\t\tclassName=\"chapter link\"\r\n\t\t\thref={`#chapter_${index}`}\r\n\t\t\tid={`chapter_link_${index}`}\r\n\t\t\tonClick={clickHandler}\r\n\t\t>{index}</a>\r\n\t\telse return <></>\r\n\t}\r\n\r\n\r\n\tfunction selectBook(index) {\r\n\t\treturn function(event) {\r\n\t\t\tsetBook(index)\r\n\t\t\tsetBookName(books[index])\r\n\t\t}\r\n\t}\r\n\r\n\tfunction toggleSelector() {\r\n\t\tif (show) {\r\n\t\t\tselectable.current.style.display = 'flex'\r\n\t\t\tsetShow(false)\r\n\t\t\tconsole.log('unshow',selectable)\r\n\t\t} else {\r\n\t\t\tselectable.current.style.display = 'none'\r\n\t\t\tsetShow(true)\r\n\t\t\tconsole.log('show')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (<>\r\n\t\t<div ref={selectable}>\r\n\t\t\t<div className=\"book selector\">\r\n\t\t\t\t{books.map((el,I)=><BookSelector index={I} key={I} name={el} />)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"chapter selector\">\r\n\t\t\t\t{chapters ? chapters.map((el,I)=><ChapterLink key={I} index={I} />) : ''}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<button onClick={toggleSelector}>{bookName}</button>\r\n\t</>)\r\n}\r\n\r\nexport default BookSelector","import React from 'react'\r\n\r\nfunction ChapterSelector({chapters=[]}) {\r\n\r\n  return (<></> )\r\n}\r\n\r\nexport default ChapterSelector\r\n","import React,{useEffect,useState} from 'react';\r\nimport './App.css';\r\nimport Book from \"./Book\";\r\nimport Selector from \"./Selector\";\r\nimport ChapterSelector from './ChapterSelector';\r\n\r\nfunction App() {\r\n  const [bible, setBible] = useState([])\r\n  const [book, setBook] = useState(1)\r\n  const [chapters, setChapters] = useState([])\r\n\r\n  useEffect(() => {\r\n    const url = 'https://raw.githubusercontent.com/theonize/charis/master/json/charis.json'\r\n    fetch(url)\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      setBible(data)\r\n    })\r\n    .catch(error=>console.error(error))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setChapters(bible[book])\r\n  }, [bible,book])\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Selector book={book} chapters={chapters} setBook={setBook} />\r\n        \r\n        <ChapterSelector />\r\n      </header>\r\n\r\n      <Book chapters={chapters} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}