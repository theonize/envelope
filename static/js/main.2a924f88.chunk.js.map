{"version":3,"sources":["Chapter.js","Book.js","Selector.js","ChapterSelector.js","App.js","serviceWorker.js","index.js"],"names":["Chapter","chapter","Verse","index","verse","tooltipId","showTooltip","event","document","getElementById","style","display","className","id","data-index","key","onMouseOut","onMouseOver","onClick","Verses","map","el","i","Book","chapters","useState","setVerses","ChapterRows","useEffect","BookSelector","book","setBook","selectable","useRef","bookName","setBookName","books","setBooks","show","setShow","name","classes","push","join","selectBook","ChapterLink","href","querySelectorAll","forEach","classList","remove","target","add","toggleSelector","current","console","log","bookData","ref","I","ChapterSelector","App","bible","setBible","setChapters","fetch","then","res","json","data","catch","error","Selector","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2a924f88.chunk.js","sourcesContent":["import React, { useRef } from 'react'\n\nfunction Chapter({ chapter }) {\n\tfunction Verse({ index, verse }) {\n\t\tconst tooltipId = `tooltip_${chapter}_${verse}`\n\n\t\tfunction hideTooltip(event) {\n\t\t\tdocument.getElementById(tooltipId).style.display = 'none'\n\t\t}\t\n\t\tfunction showTooltip(event) {\n\t\t\tdocument.getElementById(tooltipId).style.display = 'inline'\n\t\t}\t\n\n\t\treturn <>\n\t\t\t<span className=\"verse tooltip\" id={tooltipId}>{index}</span>\n\t\t\t<span\n\t\t\t\tdata-index={index}\n\t\t\t\tkey={index}\n\t\t\t\tonMouseOut={hideTooltip}\n\t\t\t\tonMouseOver={showTooltip}\n\t\t\t\tonClick={showTooltip}\n\t\t\t>\n\t\t\t\t{verse}&nbsp;&nbsp;\n\t\t\t</span>\n\t\t</>\n\t}\n\n\tfunction Verses() {\n\t\tif (chapter) {\n\t\t\treturn chapter.map((el, i) => {\n\t\t\t\tif (i) return <Verse index={i} key={i} verse={el} />\n\t\t\t})\n\t\t} else {\n\t\t\treturn <></>\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<div>\n\t\t\t<Verses />\n\t\t</div>\n\t)\n}\n\nexport default Chapter","import React,{useEffect,useState} from 'react'\nimport Chapter from \"./Chapter\";\n\nfunction Book({chapters}) {\n\tconst [chapter, ] = useState(1)\n\tconst [, setVerses] = useState([])\n\n\n\tuseEffect(() => {\n\t\tif (chapters) setVerses(chapters[chapter])\n\t}, [chapters,chapter])\n\n\tfunction ChapterRows() {\n\t\tif (chapters) {\n\t\t\treturn chapters.map((el,i)=>{\n\t\t\t\tif (i) {\n\t\t\t\t\treturn <tr key={i} id={`chapter_${i}`}>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<Chapter chapter={chapters[i]} key={i} />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t}\n\t\t\t})\n\t\t} else{\n\t\t\treturn <></>\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<table><tbody>\n\t\t\t\t<ChapterRows />\n\t\t\t</tbody></table>\n\t\t</div>\n\t)\n}\n\nexport default Book","import React,{useEffect,useRef,useState} from 'react'\nimport bookData from './books.json'\n\nfunction BookSelector({book, chapters=[], setBook}) {\n\tconst selectable = useRef(null)\n\n\tconst [bookName, setBookName] = useState('Select a Book')\n\tconst [books, setBooks] = useState([])\n\tconst [show, setShow] = useState(false)\n\n\tuseEffect(() => {\n\t\tsetBooks(bookData)\n\t}, [setBooks])\n\n\tfunction BookSelector({index,name}) {\n\t\tif (index) {\n\t\t\tconst classes = ['book','selection']\n\t\t\t\n\t\t\tif (index === book) classes.push('highlight')\n\n\t\t\treturn <span\n\t\t\t\tclassName={classes.join(' ')}\n\t\t\t\tkey={index}\n\t\t\t\tonClick={selectBook(index)}\n\t\t\t>{name}</span>\n\t\t} else {\n\t\t\treturn <></>\n\t\t}\n\t}\n\n\tfunction ChapterLink({index}) {\n\t\tfunction clickHandler(event) {\n\t\t\tconst links = document.querySelectorAll('.chapter.link')\n\t\t\t\n\t\t\tlinks.forEach(el => el.classList.remove('highlight'))\n\t\t\tevent.target.classList.add('highlight')\n\t\t\ttoggleSelector()\n\t\t}\n\n\t\tif (index) return <a \n\t\t\tclassName=\"chapter link\"\n\t\t\thref={`#chapter_${index}`}\n\t\t\tid={`chapter_link_${index}`}\n\t\t\tonClick={clickHandler}\n\t\t>{index}</a>\n\t\telse return <></>\n\t}\n\n\n\tfunction selectBook(index) {\n\t\treturn function(event) {\n\t\t\tsetBook(index)\n\t\t\tsetBookName(books[index])\n\t\t}\n\t}\n\n\tfunction toggleSelector() {\n\t\tif (show) {\n\t\t\tselectable.current.style.display = 'flex'\n\t\t\tsetShow(false)\n\t\t\tconsole.log('unshow',selectable)\n\t\t} else {\n\t\t\tselectable.current.style.display = 'none'\n\t\t\tsetShow(true)\n\t\t\tconsole.log('show')\n\t\t}\n\t}\n\n\treturn (<>\n\t\t<div ref={selectable}>\n\t\t\t<div className=\"book selector\">\n\t\t\t\t{books.map((el,I)=><BookSelector index={I} key={I} name={el} />)}\n\t\t\t</div>\n\n\t\t\t<div className=\"chapter selector\">\n\t\t\t\t{chapters ? chapters.map((el,I)=><ChapterLink key={I} index={I} />) : ''}\n\t\t\t</div>\n\t\t</div>\n\n\t\t<button onClick={toggleSelector}>{bookName}</button>\n\t</>)\n}\n\nexport default BookSelector","import React from 'react'\n\nfunction ChapterSelector({chapters=[]}) {\n\n  return (<></> )\n}\n\nexport default ChapterSelector\n","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport Book from \"./Book\";\nimport Selector from \"./Selector\";\nimport ChapterSelector from './ChapterSelector';\n\nfunction App() {\n  const [bible, setBible] = useState([])\n  const [book, setBook] = useState(1)\n  const [chapters, setChapters] = useState([])\n\n  useEffect(() => {\n    const url = 'https://raw.githubusercontent.com/theonize/charis/master/json/charis.json'\n    fetch(url)\n    .then(res=>res.json())\n    .then(data=>{\n      setBible(data)\n    })\n    .catch(error=>console.error(error))\n  }, [])\n\n  useEffect(() => {\n    setChapters(bible[book])\n  }, [bible,book])\n\n  return (\n    <div>\n      <header>\n        <Selector book={book} chapters={chapters} setBook={setBook} />\n        \n        <ChapterSelector />\n      </header>\n\n      <Book chapters={chapters} />\n    </div>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}